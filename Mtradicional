#include <iostream>
#include <vector>
#include <ctime>

using namespace std;

void multiplicacionTradicional(vector<vector<int>>& A, vector<vector<int>>& B, vector<vector<int>>& C, int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            C[i][j] = 0;
            for (int k = 0; k < n; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }
}

int main() {
    int n = 4;  // Tamaño de la matriz (debe ser potencia de 2)
    
    // Crear matrices A, B y C
    vector<vector<int>> A(n, vector<int>(n)), B(n, vector<int>(n)), C(n, vector<int>(n));

    // Rellenar las matrices A y B con valores aleatorios
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            A[i][j] = rand() % 10;
            B[i][j] = rand() % 10;
        }
    }

    // Medir el tiempo de ejecución
    clock_t start = clock();
    multiplicacionTradicional(A, B, C, n);
    clock_t end = clock();

    // Calcular y mostrar el tiempo de ejecución
    double tiempo = double(end - start) / CLOCKS_PER_SEC;
    cout << "Tiempo de ejecución (Método Tradicional): " << tiempo << " segundos." << endl;

    return 0;
}
